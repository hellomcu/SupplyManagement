<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.supply.management" />
	
	
	<!-- 配置properties的路径 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>


	<!-- 添加事务管理器组件DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 使用set方法注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<bean id="myObjectMapper" class="com.supply.management.config.MyObjectMapper"></bean>


	<!-- jedis 配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- redis服务器中心 -->
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="poolConfig" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="timeout" value="${redis.timeout}"></property>
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
<!-- 		<property name="keySerializer"> -->
<!-- 			<bean -->
<!-- 				class="org.springframework.data.redis.serializer.StringRedisSerializer" /> -->
<!-- 		</property> -->
<!-- 		<property name="valueSerializer"> -->
<!-- 			<bean -->
<!-- 				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" /> -->
<!-- 		</property> -->
	</bean>
	<!-- 配置缓存 -->
<!-- 	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"> -->
<!-- 		<constructor-arg ref="redisTemplate" /> -->
<!-- 	</bean> -->


	<!-- 开启基于注解声明式事务 注意配置transaction-manager属性，它引用了我们事务管理组件对象，这里要和事务管理器组件id一致 
		默认是transactionManager -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 处理responseBody 里面日期类型 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="myObjectMapper">

					<!-- <bean class="com.fasterxml.jackson.databind.ObjectMapper"> -->

					<!-- <property name="dateFormat"> -->
					<!-- <bean class="java.text.SimpleDateFormat"> -->
					<!-- <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" 
						/> -->
					<!-- </bean> -->
					<!-- </property> -->

					<!-- <property name="configure"> -->
					<!-- <bean class="com.fasterxml.jackson.databind.SerializationFeature"> -->
					<!-- <property name="id" ref="eee"></property> -->
					<!-- </bean> -->

					<!-- </property> -->
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


</beans>